# Ruby plugin for odoc generated json files (by dune build @doc-json)
# Autodectects json files placed in _data/api
# Originally written by Allan Blanchard for Frama-C's website
# https://git.frama-c.com/pub/pub.frama-c.com
#
# This expects you place files generated by 'dune build @doc-json'
# from '_build/default/_doc/_html/<package-name>' (note that this EXCLUDES the package page!)
# in '_data/api/<package-name>/<version-number>'
# where '<version-number>' has '.' replaced by '__' (Jekyll removes '.' in filenames)
#
# You also have to move the '_build/default/_doc/_html/<package-name>/db.js' file (generated by sherlodoc)
# to 'assets/js/db.<package-name>.<version-number>.js'
module OdocPlugin
  class OdocPageGenerator < Jekyll::Generator
    safe true

    def find_all_pages(hash)
      results = {}
      def iter(hash, path, results, depth)
        if hash then
          hash.each do |key, value|
            if key == 'indexhtml' then
              results[path] = value
            elsif value.is_a? Hash
              npath = path+[key]
              if depth == 1 then
                version = key.gsub('__', '.')
                npath = path+[version]
              end
              iter(value, npath, results, depth+1)
            else
              raise "Don't know what to do with value #{value}\n"
            end
          end
        end
      end
      iter(hash, [], results, 0)
      results
    end

    def generate(site)
      pages = find_all_pages(site.data['api'])
      pages.each do |path, data|
        site.pages << OdocPage.new(site, path, data)
      end
    end
  end

  class OdocPage < Jekyll::Page
    def initialize(site, path, data)
      @site = site
      @base = site.source
      @dir = "api/" + path.join('/')
      @basename = 'index'
      @ext = '.html'
      @name = @basename + @ext
      @data = {
        'odoc' => data,
        'layout' => 'odoc',
        'package' => path[0],
        'version' => path[1]
      }
    end
  end
end
