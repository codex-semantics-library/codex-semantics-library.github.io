{"type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"patricia-tree","href":"../../../index.html","kind":"page"},{"name":"PatriciaTree","href":"../../index.html","kind":"module"},{"name":"HETEROGENEOUS_MAP","href":"../index.html","kind":"module-type"},{"name":"WithForeign","href":"#","kind":"module"}],"toc":[{"title":"Parameters","href":"#parameters","children":[]},{"title":"Signature","href":"#signature","children":[]}],"source_anchor":null,"preamble":"<p>Operation with maps/set of different types. <code>Map2</code> must use the same <a href=\"../../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a> function.</p>","content":"<h2 id=\"parameters\"><a href=\"#parameters\" class=\"anchor\"></a>Parameters</h2><div class=\"odoc-spec\"><div class=\"spec parameter anchored\" id=\"argument-1-Map2\"><a href=\"#argument-1-Map2\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> </span><span><a href=\"argument-1-Map2/index.html\">Map2</a></span><span> : <a href=\"../../module-type-BASE_MAP/index.html\">BASE_MAP</a> <span class=\"keyword\">with</span> <span><span class=\"keyword\">type</span> <span>'a <a href=\"../../module-type-BASE_MAP/index.html#type-key\">key</a></span> = <span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-key\">key</a></span></span></span></code></div></div><h2 id=\"signature\"><a href=\"#signature\" class=\"anchor\"></a>Signature</h2><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-polyinter_foreign\"><a href=\"#type-polyinter_foreign\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>('map1, 'map2) polyinter_foreign</span></span><span> = </span><span>{</span></code><ol><li id=\"type-polyinter_foreign.f\" class=\"def record field anchored\"><a href=\"#type-polyinter_foreign.f\" class=\"anchor\"></a><code><span>f : 'a. <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-key\">key</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map2</span>)</span> <a href=\"argument-1-Map2/index.html#type-value\">Map2.value</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span>;</span></code></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-nonidempotent_inter\"><a href=\"#val-nonidempotent_inter\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> nonidempotent_inter : \u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>)</span> <a href=\"#type-polyinter_foreign\">polyinter_foreign</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'b</span> <a href=\"argument-1-Map2/index.html#type-t\">Map2.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span></span></code></div><div class=\"spec-doc\"><p>Like <a href=\"../../module-type-BASE_MAP/index.html#val-idempotent_inter\"><code>BASE_MAP.idempotent_inter</code></a>. Tries to preserve physical equality on the first argument when possible.</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-polyfilter_map_foreign\"><a href=\"#type-polyfilter_map_foreign\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>('map2, 'map1) polyfilter_map_foreign</span></span><span> = </span><span>{</span></code><ol><li id=\"type-polyfilter_map_foreign.f\" class=\"def record field anchored\"><a href=\"#type-polyfilter_map_foreign.f\" class=\"anchor\"></a><code><span>f : 'a. <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-key\">key</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map2</span>)</span> <a href=\"argument-1-Map2/index.html#type-value\">Map2.value</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span> option</span>;</span></code></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-filter_map_no_share\"><a href=\"#val-filter_map_no_share\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> filter_map_no_share : \u000A  <span><span><span>(<span class=\"type-var\">'map2</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"#type-polyfilter_map_foreign\">polyfilter_map_foreign</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'map2</span> <a href=\"argument-1-Map2/index.html#type-t\">Map2.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'map1</span> <a href=\"../index.html#type-t\">t</a></span></span></code></div><div class=\"spec-doc\"><p>Like <a href=\"../../module-type-BASE_MAP/index.html#val-filter_map_no_share\"><code>BASE_MAP.filter_map_no_share</code></a>, but allows to transform a foreigh map into the current one.</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-polyupdate_multiple\"><a href=\"#type-polyupdate_multiple\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>('map1, 'map2) polyupdate_multiple</span></span><span> = </span><span>{</span></code><ol><li id=\"type-polyupdate_multiple.f\" class=\"def record field anchored\"><a href=\"#type-polyupdate_multiple.f\" class=\"anchor\"></a><code><span>f : 'a. <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-key\">key</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span> option</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map2</span>)</span> <a href=\"argument-1-Map2/index.html#type-value\">Map2.value</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span> option</span>;</span></code></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-update_multiple_from_foreign\"><a href=\"#val-update_multiple_from_foreign\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> update_multiple_from_foreign : \u000A  <span><span><span class=\"type-var\">'b</span> <a href=\"argument-1-Map2/index.html#type-t\">Map2.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>)</span> <a href=\"#type-polyupdate_multiple\">polyupdate_multiple</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span></span></code></div><div class=\"spec-doc\"><p>This is equivalent to multiple calls to <a href=\"../index.html#val-update\"><code>update</code></a>, but more efficient. <code>update_multiple_from_foreign m_from f m_to</code> is the same as calling <code>update k {f=fun v_to -&gt; f.f k v_to v_from} m_to</code> on all bindings <code>(k, v_from)</code> of <code>m_from</code>, i.e. <code>update_multiple_from_foreign m_from f m_to</code> calls <code>f.f</code> on every key of <code>m_from</code>, says if the corresponding value also exists in <code>m_to</code>, and adds or remove the element in <code>m_to</code> depending on the value of <code>f.f</code>. <code>f.f</code> is called in the <a href=\"../../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>. O(size(m_from) + size(m_to)) complexity.</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-polyupdate_multiple_inter\"><a href=\"#type-polyupdate_multiple_inter\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>('map1, 'map2) polyupdate_multiple_inter</span></span><span> = </span><span>{</span></code><ol><li id=\"type-polyupdate_multiple_inter.f\" class=\"def record field anchored\"><a href=\"#type-polyupdate_multiple_inter.f\" class=\"anchor\"></a><code><span>f : 'a. <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-key\">key</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map2</span>)</span> <a href=\"argument-1-Map2/index.html#type-value\">Map2.value</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'map1</span>)</span> <a href=\"../index.html#type-value\">value</a></span> option</span>;</span></code></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-update_multiple_from_inter_with_foreign\"><a href=\"#val-update_multiple_from_inter_with_foreign\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> update_multiple_from_inter_with_foreign : \u000A  <span><span><span class=\"type-var\">'b</span> <a href=\"argument-1-Map2/index.html#type-t\">Map2.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>)</span> <a href=\"#type-polyupdate_multiple_inter\">polyupdate_multiple_inter</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span></span></code></div><div class=\"spec-doc\"><p><code>update_multiple_from_inter_with_foreign m_from f m_to</code> is the same as <a href=\"#val-update_multiple_from_foreign\"><code>update_multiple_from_foreign</code></a>, except that instead of updating for all keys in <code>m_from</code>, it only updates for keys that are both in <code>m_from</code> and <code>m_to</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-polydifference\"><a href=\"#type-polydifference\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>('map1, 'map2) polydifference</span></span><span> = <span><span>(<span class=\"type-var\">'map1</span>, <span class=\"type-var\">'map2</span>)</span> <a href=\"#type-polyupdate_multiple_inter\">polyupdate_multiple_inter</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-difference\"><a href=\"#val-difference\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> difference : <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>)</span> <a href=\"#type-polydifference\">polydifference</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span class=\"type-var\">'b</span> <a href=\"argument-1-Map2/index.html#type-t\">Map2.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'a</span> <a href=\"../index.html#type-t\">t</a></span></span></code></div><div class=\"spec-doc\"><p><code>difference f map1 map2</code> returns the map containing the bindings of <code>map1</code> that aren't in <code>map2</code>. For keys present in both maps but with different values, <code>f.f</code> is called. If it returns <code>Some v</code>, then binding <code>k,v</code> is kept, else <code>k</code> is dropped.</p><p><code>f.f</code> is called in the <a href=\"../../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p><p>This is the same as <a href=\"../../module-type-BASE_MAP/index.html#val-difference\"><code>BASE_MAP.difference</code></a> but allows the second map to be of a different type.</p><ul class=\"at-tags\"><li class=\"since\"><span class=\"at-tag\">since</span> 0.11.0</li></ul></div></div>"}