{"type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"patricia-tree","href":"../../index.html","kind":"page"},{"name":"PatriciaTree","href":"../index.html","kind":"module"},{"name":"MakeSet","href":"#","kind":"module"}],"toc":[{"title":"Parameters","href":"#parameters","children":[]},{"title":"Signature","href":"#signature","children":[]},{"title":"Basic functions","href":"#basic-functions","children":[]},{"title":"Iterators","href":"#iterators","children":[]},{"title":"Functions on pairs of sets","href":"#functions-on-pairs-of-sets","children":[]},{"title":"Conversion functions","href":"#conversion-functions","children":[]}],"source_anchor":null,"preamble":"<p>Create a Patricia tree based set, analogous to the standard library's <a href=\"https://ocaml.org/api/Set.Make.html\"><code>Set.Make</code></a></p>","content":"<h2 id=\"parameters\"><a href=\"#parameters\" class=\"anchor\"></a>Parameters</h2><div class=\"odoc-spec\"><div class=\"spec parameter anchored\" id=\"argument-1-Key\"><a href=\"#argument-1-Key\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> </span><span><a href=\"argument-1-Key/index.html\">Key</a></span><span> : <a href=\"../module-type-KEY/index.html\">KEY</a></span></code></div></div><h2 id=\"signature\"><a href=\"#signature\" class=\"anchor\"></a>Signature</h2><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-elt\"><a href=\"#type-elt\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> elt</span><span> = <a href=\"argument-1-Key/index.html#type-t\">Key.t</a></span></code></div><div class=\"spec-doc\"><p>The type of elements of the set</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-key\"><a href=\"#type-key\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> key</span><span> = <a href=\"#type-elt\">elt</a></span></code></div><div class=\"spec-doc\"><p>Alias for the type of elements, for cross-compatibility with maps</p></div></div><div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-BaseMap\"><a href=\"#module-BaseMap\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <a href=\"BaseMap/index.html\">BaseMap</a></span><span> : \u000A  <a href=\"../module-type-HETEROGENEOUS_MAP/index.html\">HETEROGENEOUS_MAP</a> <span class=\"keyword\">with</span> <span><span class=\"keyword\">type</span> <span>_ <a href=\"../module-type-HETEROGENEOUS_MAP/index.html#type-key\">key</a></span> = <a href=\"#type-elt\">elt</a></span> <span class=\"keyword\">and</span> <span><span class=\"keyword\">type</span> <span>(_, _) <a href=\"../module-type-HETEROGENEOUS_MAP/index.html#type-value\">value</a></span> = unit</span></span></code></div><div class=\"spec-doc\"><p>Underlying basemap, for cross map/set operations</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t\"><a href=\"#type-t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> t</span><span> = <span>unit <a href=\"BaseMap/index.html#type-t\">BaseMap.t</a></span></span></code></div><div class=\"spec-doc\"><p>The set type</p></div></div><h2 id=\"basic-functions\"><a href=\"#basic-functions\" class=\"anchor\"></a>Basic functions</h2><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-empty\"><a href=\"#val-empty\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> empty : <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p>The empty set</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_empty\"><a href=\"#val-is_empty\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_empty : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p><code>is_empty st</code> is <code>true</code> if <code>st</code> contains no elements, <code>false</code> otherwise</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-mem\"><a href=\"#val-mem\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> mem : <span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p><code>mem elt set</code> is <code>true</code> if <code>elt</code> is contained in <code>set</code>, O(log(n)) complexity.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-add\"><a href=\"#val-add\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> add : <span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>add elt set</code> adds element <code>elt</code> to the <code>set</code>. Preserves physical equality if <code>elt</code> was already present. O(log(n)) complexity.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-singleton\"><a href=\"#val-singleton\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> singleton : <span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>singleton elt</code> returns a set containing a single element: <code>elt</code></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-cardinal\"><a href=\"#val-cardinal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> cardinal : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> int</span></code></div><div class=\"spec-doc\"><p><code>cardinal set</code> is the size of the set (number of elements), O(n) complexity.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_singleton\"><a href=\"#val-is_singleton\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_singleton : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> option</span></span></code></div><div class=\"spec-doc\"><p><code>is_singleton set</code> is <code>Some (Any elt)</code> if <code>set</code> is <code>singleton elt</code> and <code>None</code> otherwise.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-remove\"><a href=\"#val-remove\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> remove : <span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>remove elt set</code> returns a set containing all elements of <code>set</code> except <code>elt</code>. Returns a value physically equal to <code>set</code> if <code>elt</code> is not present.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unsigned_min_elt\"><a href=\"#val-unsigned_min_elt\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unsigned_min_elt : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-elt\">elt</a></span></code></div><div class=\"spec-doc\"><p>The minimal element (according to the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> on <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>) if non empty.</p><ul class=\"at-tags\"><li class=\"raises\"><span class=\"at-tag\">raises</span> <code>Not_found</code> </li></ul></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unsigned_max_elt\"><a href=\"#val-unsigned_max_elt\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unsigned_max_elt : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-elt\">elt</a></span></code></div><div class=\"spec-doc\"><p>The maximal element (according to the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> on <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>) if non empty.</p><ul class=\"at-tags\"><li class=\"raises\"><span class=\"at-tag\">raises</span> <code>Not_found</code> </li></ul></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pop_unsigned_minimum\"><a href=\"#val-pop_unsigned_minimum\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pop_unsigned_minimum : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><span>(<a href=\"#type-elt\">elt</a> * <a href=\"#type-t\">t</a>)</span> option</span></span></code></div><div class=\"spec-doc\"><p><code>pop_unsigned_minimum s</code> is <code>Some (elt, s')</code> where <code>elt = unsigned_min_elt s</code> and <code>s' = remove elt s</code> if <code>s</code> is non empty. Uses the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> on <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pop_unsigned_maximum\"><a href=\"#val-pop_unsigned_maximum\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pop_unsigned_maximum : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><span>(<a href=\"#type-elt\">elt</a> * <a href=\"#type-t\">t</a>)</span> option</span></span></code></div><div class=\"spec-doc\"><p><code>pop_unsigned_maximum s</code> is <code>Some (elt, s')</code> where <code>elt = unsigned_max_elt s</code> and <code>s' = remove elt s</code> if <code>s</code> is non empty. Uses the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> on <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p></div></div><h2 id=\"iterators\"><a href=\"#iterators\" class=\"anchor\"></a>Iterators</h2><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-iter\"><a href=\"#val-iter\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> iter : <span><span>(<span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> unit)</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p><code>iter f set</code> calls <code>f</code> on all elements of <code>set</code>, in the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-filter\"><a href=\"#val-filter\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> filter : <span><span>(<span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> bool)</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>filter f set</code> is the subset of <code>set</code> that only contains the elements that satisfy <code>f</code>. <code>f</code> is called in the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-for_all\"><a href=\"#val-for_all\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> for_all : <span><span>(<span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> bool)</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p><code>for_all f set</code> is <code>true</code> if <code>f</code> is <code>true</code> on all elements of <code>set</code>. Short-circuits on first <code>false</code>. <code>f</code> is called in the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-fold\"><a href=\"#val-fold\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> fold : <span><span>(<span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'acc</span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"type-var\">'acc</span>)</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'acc</span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"type-var\">'acc</span></span></code></div><div class=\"spec-doc\"><p><code>fold f set acc</code> returns <code>f elt_n (... (f elt_1 acc) ...)</code>, where <code>elt_1, ..., elt_n</code> are the elements of <code>set</code>, in increasing <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-split\"><a href=\"#val-split\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> split : <span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a> * bool * <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>split elt set</code> returns <code>s_lt, present, s_gt</code> where <code>s_lt</code> contains all elements of <code>set</code> smaller than <code>elt</code>, <code>s_gt</code> all those greater than <code>elt</code>, and <code>present</code> is <code>true</code> if <code>elt</code> is in <code>set</code>. Uses the <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> on <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pretty\"><a href=\"#val-pretty\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pretty : \u000A  <span><span class=\"optlabel\">?pp_sep</span>:<span>(<span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span>unit <span class=\"arrow\">&#45;&gt;</span></span> unit)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> <span class=\"arrow\">&#45;&gt;</span></span> unit)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div><div class=\"spec-doc\"><p>Pretty prints the set, <code>pp_sep</code> is called once between each element, it defaults to <a href=\"https://v2.ocaml.org/api/Format.html#VALpp_print_cut\"><code>Format.pp_print_cut</code></a></p></div></div><h2 id=\"functions-on-pairs-of-sets\"><a href=\"#functions-on-pairs-of-sets\" class=\"anchor\"></a>Functions on pairs of sets</h2><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-union\"><a href=\"#val-union\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> union : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>union a b</code> is the set union of <code>a</code> and <code>b</code>, i.e. the set containing all elements that are either in <code>a</code> or <code>b</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-inter\"><a href=\"#val-inter\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> inter : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>inter a b</code> is the set intersection of <code>a</code> and <code>b</code>, i.e. the set containing all elements that are in both <code>a</code> or <code>b</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-disjoint\"><a href=\"#val-disjoint\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> disjoint : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p><code>disjoint a b</code> is <code>true</code> if <code>a</code> and <code>b</code> have no elements in common.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-equal\"><a href=\"#val-equal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> equal : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p><code>equal a b</code> is <code>true</code> if <code>a</code> and <code>b</code> contain the same elements.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-compare\"><a href=\"#val-compare\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> compare : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> int</span></code></div><div class=\"spec-doc\"><p><code>compare s1 s2</code> is an order on setss. <code>s1</code> and <code>s2</code> are equal if they contain the same bindings (compare by <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>). <code>s1</code> is strictly smaller than <code>s2</code> if the first difference (in the order of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a>) is an element that appears in <code>s2</code> but not in <code>s1</code>.</p><ul class=\"at-tags\"><li class=\"since\"><span class=\"at-tag\">since</span> v0.11.0</li></ul></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-subset\"><a href=\"#val-subset\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> subset : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p><code>subset a b</code> is <code>true</code> if all elements of <code>a</code> are also in <code>b</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-diff\"><a href=\"#val-diff\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> diff : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>diff s1 s2</code> is the set of all elements of <code>s1</code> that aren't in <code>s2</code>.</p><ul class=\"at-tags\"><li class=\"since\"><span class=\"at-tag\">since</span> v0.11.0</li></ul></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-min_elt_inter\"><a href=\"#val-min_elt_inter\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> min_elt_inter : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> option</span></span></code></div><div class=\"spec-doc\"><p><code>min_elt_inter s1 s2</code> is <a href=\"#val-unsigned_min_elt\"><code>unsigned_min_elt</code></a> of <a href=\"#val-inter\" title=\"inter\"><code>inter s1 s2</code></a>, but faster as it does not require computing the whole intersection. Returns <code>None</code> when the intersection is empty.</p><ul class=\"at-tags\"><li class=\"since\"><span class=\"at-tag\">since</span> v0.11.0</li></ul></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-max_elt_inter\"><a href=\"#val-max_elt_inter\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> max_elt_inter : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> option</span></span></code></div><div class=\"spec-doc\"><p><code>max_elt_inter s1 s2</code> is <a href=\"#val-unsigned_max_elt\"><code>unsigned_max_elt</code></a> of <a href=\"#val-inter\" title=\"inter\"><code>inter s1 s2</code></a>, but faster as it does not require computing the whole intersection. Returns <code>None</code> when the intersection is empty.</p><ul class=\"at-tags\"><li class=\"since\"><span class=\"at-tag\">since</span> v0.11.0</li></ul></div></div><h2 id=\"conversion-functions\"><a href=\"#conversion-functions\" class=\"anchor\"></a>Conversion functions</h2><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_seq\"><a href=\"#val-to_seq\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_seq : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> <span class=\"xref-unresolved\">Stdlib</span>.Seq.t</span></span></code></div><div class=\"spec-doc\"><p><code>to_seq st</code> iterates the whole set, in increasing <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_rev_seq\"><a href=\"#val-to_rev_seq\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_rev_seq : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> <span class=\"xref-unresolved\">Stdlib</span>.Seq.t</span></span></code></div><div class=\"spec-doc\"><p><code>to_rev_seq st</code> iterates the whole set, in decreasing <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-add_seq\"><a href=\"#val-add_seq\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> add_seq : <span><span><a href=\"#type-elt\">elt</a> <span class=\"xref-unresolved\">Stdlib</span>.Seq.t</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>add_seq s st</code> adds all elements of the sequence <code>s</code> to <code>st</code> in order.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-of_seq\"><a href=\"#val-of_seq\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> of_seq : <span><span><a href=\"#type-elt\">elt</a> <span class=\"xref-unresolved\">Stdlib</span>.Seq.t</span> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>of_seq s</code> creates a new set from the elements of <code>s</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-of_list\"><a href=\"#val-of_list\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> of_list : <span><span><a href=\"#type-elt\">elt</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p><code>of_list l</code> creates a new set from the elements of <code>l</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_list\"><a href=\"#val-to_list\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_list : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-elt\">elt</a> list</span></span></code></div><div class=\"spec-doc\"><p><code>to_list s</code> returns the elements of <code>s</code> as a list, in increasing <a href=\"../index.html#val-unsigned_lt\" title=\"unsigned_lt\">unsigned order</a> of <a href=\"../module-type-KEY/index.html#val-to_int\"><code>KEY.to_int</code></a></p></div></div>"}